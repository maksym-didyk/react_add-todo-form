{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","id","username","getUser","userId","usersFromServer","find","App","useState","visibleTodos","setVisibleTodos","titleValue","setTitleValue","usersValue","setUsersValue","errorTitle","setErrorTitle","errorUsers","setErrorUsers","onSubmit","event","preventDefault","elementToAdd","Math","max","htmlFor","type","placeholder","autoComplete","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.820a89ab.chunk.js","sourcesContent":["import { FC } from 'react';\nimport { User } from '../../types/User';\n\ninterface Props {\n  user: User\n}\n\nexport const UserInfo: FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo: FC<Props> = ({ todo }) => {\n  const { title, user, completed } = todo;\n\n  return (\n    <article\n      data-id=\"1\"\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n\n  );\n};\n","import { FC } from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport { FC, FormEvent, useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: FC = () => {\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>(todos);\n  const [titleValue, setTitleValue] = useState('');\n  const [usersValue, setUsersValue] = useState('0');\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [errorUsers, setErrorUsers] = useState(false);\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n\n    if (!titleValue) {\n      setErrorTitle(true);\n    }\n\n    if (usersValue === '0') {\n      setErrorUsers(true);\n    }\n\n    if (titleValue && usersValue !== '0') {\n      const newId = Math.max(...visibleTodos.map(todo => todo.id)) + 1;\n\n      const elementToAdd: Todo = {\n        id: newId,\n        title: titleValue,\n        completed: false,\n        userId: +usersValue,\n        user: getUser(+usersValue),\n      };\n\n      setVisibleTodos([...visibleTodos, elementToAdd]);\n      setTitleValue('');\n      setUsersValue('0');\n      setErrorTitle(false);\n      setErrorUsers(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label htmlFor=\"newTodoTitle\">\n            Title:\n            <input\n              type=\"text\"\n              id=\"newTodoTitle\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title here\"\n              autoComplete=\"off\"\n              value={titleValue}\n              onChange={event => setTitleValue(event.target.value)}\n            />\n            {errorTitle && <span className=\"error\">Please enter a title</span>}\n          </label>\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"newTodoUser\">\n            User:\n            <select\n              id=\"newTodoUser\"\n              data-cy=\"userSelect\"\n              value={usersValue}\n              onChange={(event) => setUsersValue(event.target.value)}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map(({ id, name }) => (\n                <option\n                  value={id}\n                  key={id}\n                >\n                  {name}\n                </option>\n              ))}\n            </select>\n            {errorUsers && <span className=\"error\">Please choose a user</span>}\n          </label>\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}